# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
        
#       - name: Verify repo structure
#         run: ls -R 
        
#       - name: Set up Node.js (for frontend projects)
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18

#       # run ./setup.sh to install dependencies
#       - name: Install dependencies
#         run: ./setup.sh
#         working-directory: ./

      
#       - name: Run backend tests
#         run: npm test
#         working-directory: source_code/backend

#       # ----- Selenium Tests for Frontend (Python) -----
#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.x'
      
#       - name: Create and activate virtual environment and install Python dependencies
#         run: |
#           python -m venv venv
#           source venv/bin/activate
#           pip install --upgrade pip
#           pip install -r source_code/__tests__/requirements.txt
#         working-directory: ./

#       - name: Run Selenium tests for frontend
#         run: |
#           source venv/bin/activate
#           # Assuming your Selenium tests are discoverable with unittest in the specified directory:
#           python -m unittest discover -s source_code/__tests__
#         working-directory: ./

name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Verify repo structure
        run: ls -R

      - name: Set up Node.js (for frontend projects)
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install wait-on globally
        run: npm install -g wait-on

      # Install frontend dependencies in the correct directory
      - name: Install frontend dependencies
        run: npm install
        working-directory: source_code/frontend  # Adjust this path

      # Start servers with proper script name
      - name: Start servers (frontend & backend)
        run: |
          chmod +x start.sh
          ./start.sh &
        working-directory: ./  # Adjust this path

      # Wait for frontend to be fully up
      - name: Wait for frontend
        run: npx wait-on --timeout 30000 http://localhost:5173 || exit 1  # 30s timeout, fail if not ready
        working-directory: source_code/frontend  # Adjust this path

      # Optional: Run backend tests (if applicable)
      - name: Run backend tests (if applicable)
        run: npm test || echo "No backend tests found, skipping..."
        working-directory: source_code/backend

      # ----- Selenium Tests for Frontend (Python) -----
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Create and activate virtual environment and install Python dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r source_code/__tests__/requirements.txt
        working-directory: ./

      - name: Run Selenium tests for frontend
        run: |
          source venv/bin/activate
          python -m unittest discover -s source_code/__tests__
        working-directory: ./