# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
        
#       - name: Verify repo structure
#         run: ls -R 
        
#       - name: Set up Node.js (for frontend projects)
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18

#       # run ./setup.sh to install dependencies
#       - name: Install dependencies
#         run: ./setup.sh
#         working-directory: ./


#       # - name: Run frontend tests
#       #   run: npm test
#       #   working-directory: source_code/frontend
      
#       - name: Run backend tests
#         run: npm test
#         working-directory: source_code/backend



name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
        ATLAS_URI: mongodb+srv://fixifydev:46SgruY75iezyd9o@fixifycluster0.f0fkl.mongodb.net/fixifydev retryWrites=true&w=majority&appName=FixifyCluster0
        JWT_SECRET: 3yJv9kL8s5d9f8s7d9f8s7d9f8s7d9f8s7d9f8s7d9f8s7d9f8s7d9f8s7d9f8s7
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Verify repo structure
        run: ls -R 

      # Set up Node.js for frontend and backend
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Set up Python for Selenium tests
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13.2'  # Adjust version as needed

      # Install MongoDB (for backend)
      - name: Install MongoDB
        uses: supercharge/mongodb-github-action@1.8.0
        with:
          mongodb-version: '8.0'  # Adjust version to match your backend

      # Install project dependencies
      - name: Install backend and frontend dependencies
        run: ./setup.sh
        working-directory: ./

      # Install Python dependencies for Selenium
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium webdriver-manager
        working-directory: ./source_code/__tests__  # Adjust path to your test folder

      # Install Chrome and ChromeDriver for Selenium
      - name: Install Chrome and ChromeDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          google-chrome --version

      # Start the backend (in the background)
      - name: Start backend
        run: npm start &
        working-directory: source_code/backend
        env:
          MONGODB_URI: mongodb://localhost:3000/fixify  # Adjust URI as needed

      # Start the frontend (in the background)
      - name: Start frontend
        run:
          npm install -g serve 
          npm run build
          serve -s dist -l 5173 &
        working-directory: source_code/frontend  # Adjust path to your React app
        env:
          CI: true  # Prevents React from hanging in CI

      # Wait for services to be ready
      - name: Wait for backend and frontend
        run: |
          sleep 30  # Give time for services to start (adjust as needed)
          curl --retry 10 --retry-delay 5 http://localhost:5173 || exit 1  # Adjust frontend port
          curl --retry 10 --retry-delay 5 http://localhost:3000 || exit 1  # Adjust backend port
          curl http://localhost:5173/aboutus > frontend_content.html || echo "Failed to fetch frontend content"
          cat frontend_content.html || echo "No content to display"

      # Run backend tests
      - name: Run backend tests
        run: npm test
        working-directory: source_code/backend

      # Run frontend Selenium tests
      - name: Run frontend Selenium tests
        run: python -m unittest test_aboutUs.py  # Adjust to your test file name
        working-directory: source_code/__tests__  # Adjust path to your test folder
